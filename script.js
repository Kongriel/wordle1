const dictionary = [
  "acorn",
  "acrid",
  "actor",
  "adept",
  "adobe",
  "actor",

  "adorn",
  "adult",
  "agent",
  "agony",
  "aisle",
  "alder",
  "alien",
  "alike",
  "alive",
  "alone",
  "aloud",
  "amber",
  "ample",
  "amuck",
  "apple",
  "angel",
  "angry",
  "ankle",
  "antic",
  "arise",
  "aspen",
  "aspic",
  "audio",
  "awful",
  "azure",
  "balmy",
  "bandy",
  "basic",
  "basin",
  "batch",
  "baton",
  "bawdy",
  "beady",
  "beamy",
  "beast",
  "being",
  "bight",
  "bigot",
  "binge",
  "bingo",
  "biped",
  "birch",
  "birth",
  "bison",
  "biter",
  "blame",
  "bland",
  "blank",
  "bleak",
  "bleat",
  "blind",
  "bloat",
  "blond",
  "blunt",
  "bodge",
  "bogie",
  "bogus",
  "boned",
  "bonus",
  "bound",
  "boxer",
  "brack",
  "braid",
  "brand",
  "brash",
  "brave",
  "brawl",
  "brawn",
  "brick",
  "brief",
  "brisk",
  "broad",
  "broke",
  "brute",
  "bugle",
  "built",
  "bulky",
  "burly",
  "bushy",
  "butch",
  "cadet",
  "cadre",
  "calyx",
  "camel",
  "caste",
  "cedar",
  "chaos",
  "chard",
  "cheap",
  "chest",
  "chief",
  "china",
  "chirp",
  "chive",
  "choir",
  "choky",
  "chore",
  "churl",
  "clave",
  "claim",
  "cleft",
  "clerk",
  "clove",
  "clown",
  "clung",
  "comer",
  "conga",
  "congé",
  "coral",
  "corny",
  "corps",
  "corse",
  "court",
  "couth",
  "cover",
  "covey",
  "crake",
  "cramp",
  "craps",
  "crash",
  "crawl",
  "crazy",
  "cream",
  "crime",
  "crimp",
  "croup",
  "crown",
  "crude",
  "cruel",
  "cruet",
  "crump",
  "crypt",
  "curia",
  "curst",
  "curve",
  "daily",
  "datum",
  "delta",
  "demon",
  "depth",
  "diary",
  "dicky",
  "dinar",
  "diner",
  "dinge",
  "disco",
  "diver",
  "dogma",
  "doing",
  "dough",
  "downy",
  "dowry",
  "dozen",
  "draft",
  "drake",
  "drift",
  "drove",
  "drunk",
  "ducal",
  "duchy",
  "dukes",
  "dyers",
  "dying",
  "dance",
  "space",
  "spoon",
  "ducat",
  "dumpy",
  "dusky",
  "dusty",
  "dwarf",
  "dying",
  "debut",
  "early",
  "elfin",
  "entry",
  "envoy",
  "epoch",
  "equal",
  "ergot",
  "ethic",
  "exact",
  "exist",
  "extra",
  "faint",
  "fairy",
  "faker",
  "fakir",
  "false",
  "fancy",
  "fated",
  "feint",
  "felon",
  "femur",
  "feral",
  "field",
  "fiend",
  "fiery",
  "filet",
  "final",
  "finch",
  "first",
  "fishy",
  "fitch",
  "fiver",
  "fixed",
  "fixer",
  "flair",
  "flaky",
  "flank",
  "flask",
  "flesh",
  "flint",
  "flirt",
  "flora",
  "fluid",
  "fluke",
  "flush",
  "forte",
  "forum",
  "fount",
  "frail",
  "frank",
  "frisk",
  "frond",
  "fusil",
  "fusty",
  "gamut",
  "gaper",
  "garth",
  "gaunt",
  "gauze",
  "genus",
  "getup",
  "giant",
  "glade",
  "gland",
  "glare",
  "gloat",
  "gnome",
  "grail",
  "grand",
  "grate",
  "grave",
  "gravy",
  "great",
  "grief",
  "grise",
  "groat",
  "group",
  "grove",
  "guild",
  "gumbo",
  "hardy",
  "haver",
  "hawse",
  "hazel",
  "heady",
  "heist",
  "heavy",
  "hoary",
  "honey",
  "horde",
  "hover",
  "human",
  "husky",
  "idler",
  "inert",
  "inlet",
  "irony",
  "ivory",
  "jerky",
  "jihad",
  "joust",
  "juicy",
  "jumbo",
  "knave",
  "labor",
  "laity",
  "laker",
  "large",
  "laser",
  "later",
  "latex",
  "laver",
  "leafy",
  "leaky",
  "lemon",
  "letch",
  "limbo",
  "lined",
  "liner",
  "lithe",
  "liver",
  "loath",
  "locus",
  "lofty",
  "logic",
  "lotus",
  "lover",
  "lower",
  "lucid",
  "lucky",
  "lumen",
  "lurid",
  "lusty",
  "lying",
  "lyric",
  "macro",
  "madly",
  "magus",
  "maize",
  "major",
  "manes",
  "mango",
  "manly",
  "manor",
  "manse",
  "maybe",
  "mealy",
  "meaty",
  "media",
  "medic",
  "midge",
  "miner",
  "minor",
  "mirth",
  "miser",
  "misty",
  "mixed",
  "mixer",
  "mocha",
  "modal",
  "model",
  "moiré",
  "moist",
  "molar",
  "monad",
  "moral",
  "morel",
  "mould",
  "mousy",
  "mover",
  "movie",
  "mufti",
  "murky",
  "mushy",
  "music",
  "musty",
  "nadir",
  "naive",
  "naked",
  "nasty",
  "nates",
  "navel",
  "neigh",
  "nervy",
  "night",
  "noble",
  "noisy",
  "north",
  "noted",
  "nymph",
  "earth",
  "oared",
  "ocean",
  "ocher",
  "odium",
  "often",
  "olive",
  "omega",
  "opera",
  "optic",
  "ounce",
  "outer",
  "ovary",
  "ovine",
  "palsy",
  "panic",
  "pants",
  "party",
  "pasty",
  "paten",
  "penis",
  "peach",
  "pecan",
  "pedal",
  "penal",
  "phony",
  "piano",
  "piety",
  "piker",
  "pilot",
  "pinch",
  "pinky",
  "pious",
  "pithy",
  "plain",
  "plumb",
  "plush",
  "poker",
  "pokey",
  "polar",
  "polka",
  "pussy",
  "porch",
  "porgy",
  "poser",
  "prawn",
  "prime",
  "primo",
  "privy",
  "prize",
  "prone",
  "prose",
  "proud",
  "proxy",
  "pubes",
  "pylon",
  "quack",
  "qualm",
  "quart",
  "quick",
  "quiet",
  "quint",
  "quirk",
  "quite",
  "quota",
  "rabid",
  "radix",
  "raphe",
  "rapid",
  "ratio",
  "raven",
  "rayon",
  "ready",
  "regal",
  "reign",
  "reins",
  "relax",
  "relay",
  "relic",
  "rheum",
  "right",
  "rocky",
  "rogue",
  "roman",
  "rouge",
  "rough",
  "royal",
  "runic",
  "rusty",
  "sable",
  "sabre",
  "salon",
  "salty",
  "salvo",
  "sandy",
  "satin",
  "satyr",
  "saucy",
  "scald",
  "scaly",
  "scant",
  "scape",
  "scary",
  "scion",
  "scrim",
  "scrip",
  "setup",
  "spice",
  "shady",
  "shaky",
  "shank",
  "shard",
  "shine",
  "shiny",
  "shire",
  "shlep",
  "shoal",
  "shock",
  "short",
  "showy",
  "sigma",
  "siren",
  "skate",
  "skein",
  "skimp",
  "slate",
  "slave",
  "slick",
  "slimy",
  "sloth",
  "smock",
  "smoky",
  "snail",
  "snake",
  "snaky",
  "snowy",
  "soapy",
  "sober",
  "solar",
  "solid",
  "sough",
  "south",
  "spare",
  "spate",
  "spelt",
  "spent",
  "sperm",
  "spick",
  "spicy",
  "spiny",
  "splat",
  "splay",
  "split",
  "spore",
  "sport",
  "sprat",
  "sprue",
  "spume",
  "spunk",
  "squab",
  "squat",
  "squid",
  "stair",
  "stale",
  "stang",
  "stark",
  "steam",
  "stern",
  "stich",
  "stile",
  "stock",
  "stoic",
  "stole",
  "stoma",
  "stone",
  "straw",
  "stria",
  "stuck",
  "suite",
  "sulky",
  "sumac",
  "super",
  "swain",
  "swale",
  "swank",
  "sward",
  "swart",
  "swing",
  "sworn",
  "sylph",
  "synod",
  "syrup",
  "tache",
  "talon",
  "talus",
  "tango",
  "tawny",
  "teary",
  "tempo",
  "tenor",
  "thick",
  "thief",
  "thing",
  "think",
  "thong",
  "throb",
  "thunk",
  "tiger",
  "tiler",
  "timer",
  "tipsy",
  "tired",
  "topaz",
  "topic",
  "torus",
  "tough",
  "touse",
  "trace",
  "trial",
  "trice",
  "tripe",
  "trope",
  "truck",
  "truly",
  "trunk",
  "tuber",
  "fried",
  "twain",
  "twang",
  "twirl",
  "tying",
  "uncle",
  "under",
  "ungod",
  "union",
  "unity",
  "upend",
  "upper",
  "upset",
  "urban",
  "urine",
  "usage",
  "useful",
  "vacant",
  "vague",
  "valid",
  "value",
  "vanad",
  "vapor",
  "vegan",
  "veldt",
  "venom",
  "tulip",
  "alarm",
  "tumid",
  "tumor",
  "tuner",
  "tunic",
  "twice",
  "twink",
  "ultra",
  "umber",
  "umbra",
  "unfit",
  "unite",
  "upset",
  "urban",
  "valor",
  "velar",
  "velum",
  "venal",
  "video",
  "vinyl",
  "viola",
  "glide",
  "viper",
  "radio",
  "swipe",
  "flute",
  "knife",
  "vista",
  "vital",
  "order",
  "vixen",
  "vizor",
  "vocal",
  "vogue",
  "wader",
  "washy",
  "waste",
  "waver",
  "waxen",
  "weald",
  "weary",
  "reset",
  "redeo",
  "world",
  "scale",
  "weird",
  "welsh",
  "wench",
  "wheat",
  "whelk",
  "whist",
  "white",
  "wight",
  "wince",
  "windy",
  "wiper",
  "wired",
  "wizen",
  "world",
  "wormy",
  "worse",
  "worth",
  "wound",
  "woven",
  "wrath",
  "wrong",
  "yacht",
  "zebra",
];

const state = {
  secret: "",
  grid: Array(6)
    .fill()
    .map(() => Array(5).fill("")),
  currentRow: 0,
  currentCol: 0,
};

function updateGrid() {
  for (let i = 0; i < state.grid.length; i++) {
    for (let j = 0; j < state.grid[i].length; j++) {
      const box = document.getElementById(`box${i}${j}`);
      box.textContent = state.grid[i][j];
    }
  }
}

function drawBox(container, row, col, letter = "") {
  const box = document.createElement("div");
  box.className = "box";
  box.id = `box${row}${col}`;
  box.textContent = letter;

  container.appendChild(box);
  return box;
}

function drawGrid(container) {
  const grid = document.createElement("div");
  grid.className = "grid";

  for (let i = 0; i < 6; i++) {
    for (let j = 0; j < 5; j++) {
      drawBox(grid, i, j);
    }
  }
  container.appendChild(grid);
}

function registerKeyboardEvents() {
  document.body.onkeydown = (e) => {
    const key = e.key;
    if (key === "Enter") {
      if (state.currentCol === 5) {
        const word = getCurrentWord();
        if (isWordValid(word)) {
          revealWord(word);
          state.currentRow++;
          state.currentCol = 0;
          saveGameState(); // Save game state after each word entered
        } else {
          alert("Not a Valid word.");
        }
      }
    }
    if (key === "Backspace") {
      removeLetter();
    }
    if (isLetter(key)) {
      addLetter(key);
    }
    updateGrid();
  };
}

function getCurrentWord() {
  return state.grid[state.currentRow].reduce((prev, curr) => prev + curr);
}
function isWordValid(word) {
  return dictionary.includes(word);
}

function revealWord(quess) {
  const row = state.currentRow;

  for (let i = 0; i < 5; i++) {
    const box = document.getElementById(`box${row}${i}`);
    const letter = box.textContent;

    if (letter === state.secret[i]) {
      box.classList.add("right");
    } else if (state.secret.includes(letter)) {
      box.classList.add("wrong");
    } else {
      box.classList.add("empty");
    }
  }
  const isWinner = state.secret === quess;
  const isGameOver = state.currentRow === 5;

  if (isWinner) {
    alert("Tillykke");
  } else if (isGameOver) {
    alert(`Taber! Ordet var ${state.secret}`);
  }
}
function isLetter(key) {
  return key.length === 1 && key.match(/[a-z]/i);
}
function addLetter(letter) {
  if (state.currentCol === 5) return;
  state.grid[state.currentRow][state.currentCol] = letter;
  state.currentCol++;
}
function removeLetter() {
  if (state.currentCol === 0) return;
  state.grid[state.currentRow][state.currentCol - 1] = "";
  state.currentCol--;
}

function saveGameState() {
  localStorage.setItem("gameState", JSON.stringify(state));
}
function loadGameState() {
  const savedState = localStorage.getItem("gameState");
  if (savedState) {
    Object.assign(state, JSON.parse(savedState));
    // Update the grid with saved input
    for (let i = 0; i < state.grid.length; i++) {
      for (let j = 0; j < state.grid[i].length; j++) {
        const letter = state.grid[i][j];
        const box = document.getElementById(`box${i}${j}`);
        box.textContent = letter;
        if (letter !== "") {
          addLetterToClassList(box, letter);
        }
      }
    }
  } else {
    state.secret = dictionary[Math.floor(Math.random() * dictionary.length)];
  }
}
function addLetterToClassList(box, letter) {
  if (letter === "") {
    box.classList.add("empty");
    return; // Exit early if the box is empty
  }

  const secretIndex = state.secret.indexOf(letter);
  if (secretIndex !== -1) {
    box.classList.remove("wrong");
    box.classList.add("wrong"); // Remove wrong class if present
  } else {
    box.classList.remove("right");
    box.classList.add("right"); // Remove right class if present
  }
}

function startup() {
  const game = document.getElementById("game");
  drawGrid(game);

  registerKeyboardEvents();
  loadGameState();

  console.log(state.secret);
}

startup();

window.refresh = function () {
  localStorage.removeItem("gameState"); // Remove saved game state from localStorage
  location.reload();
  console.log("test");
};
